version: 2
jobs:
  build:
    docker:
      - image: ubuntu:xenial
        environment:
          DEBUG: 'true'
          DEFAULT_FORK: 'open-craft/edx-platform'
          LOAD_BALANCER_FRAGMENT_NAME_PREFIX: 'integration-'
          TEST_RUNNER: 'opencraft.tests.utils.CircleCIParallelTestRunner'
      - image: redis
      - image: mongo:3.6.7-stretch
      - image: "circleci/mysql:5"
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: True
      - image: circleci/postgres:10.1-alpine
        environment:
          PG_HOST: 127.0.0.1
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: apt-get update
          command: |
            apt-get update
      - run:
          name: Wait for Redis
          command: |
            while ! nc -z localhost 6379; do
              sleep 0.1
            done
      - run:
          name: Wait for Postgres
          command: |
            while ! nc -z localhost 5432; do
              sleep 0.1
            done
      - run:
          name: Wait for MySQL
          command: |
            while ! nc -z localhost 3306; do
              sleep 0.1
            done
      - run:
          name: Wait for MongoDB
          command: |
            while ! nc -z localhost 27017; do
              sleep 0.1
            done
      - run:
          name: Install Dependencies
          command: |
             apt-get install make git python-virtualenv gcc python-dev libxml2-dev libxmlsec1-dev wget
             apt-get install xvfb
             apt-get install libgtk-3-0 libdbus-glib-1-2
            wget https://github.com/mozilla/geckodriver/releases/download/v0.15.0/geckodriver-v0.15.0-linux64.tar.gz
            mkdir geckodriver
            tar -xf geckodriver-v0.15.0-linux64.tar.gz -C geckodriver
            export PATH=$PATH:$(pwd)/geckodriver
            wget https://ftp.mozilla.org/pub/firefox/releases/52.0.1esr/linux-x86_64/en-US/firefox-52.0.1esr.tar.bz2
            tar -xf firefox-52.0.1esr.tar.bz2
            export PATH=$PATH:$(pwd)/firefox
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install --upgrade virtualenv
             apt-get update;  apt-get install python2.7-dev
             apt-get install mysql-client
            pip install -r requirements.txt
            pip install -r cleanup_utils/requirements.txt
             apt-get install postgresql-client
             apt-get install unzip
             wget -P /tmp https://releases.hashicorp.com/consul/1.2.1/consul_1.2.1_linux_amd64.zip
      - run:
          name: Run Consul
          command: |
             unzip /tmp/consul_1.2.1_linux_amd64.zip -d /usr/local/bin
            consul agent -dev
          background: true
      - save_cache:
          key: dependencies-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Create Database
          command: make create_db
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            bin/run-circleci-tests
          no_output_timeout: 47m
          environment:
            ANSIBLE_HOST_KEY_CHECKING: False
  cleanup:
    docker:
      - image: circleci/python:3.5.4
        environment:
          LOAD_BALANCER_FRAGMENT_NAME_PREFIX: 'integration-'
          DJANGO_SETTINGS_MODULE: 'opencraft.settings'
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Install Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
             apt-get install libpython2.7-dev
            pip install -r cleanup_utils/requirements.txt
      - run:
          name: Cleanup
          command: |
            . venv/bin/activate
            make test.integration_cleanup
          no_output_timeout: 20m
          when: always
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - cleanup
